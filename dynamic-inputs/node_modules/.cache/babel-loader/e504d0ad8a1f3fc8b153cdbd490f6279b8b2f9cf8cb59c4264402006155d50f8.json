{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\OneDrive - Virginia Tech\\\\Desktop\\\\Projects\\\\HackHarvard\\\\InstaShop\\\\dynamic-inputs\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [storedValues, setStoredValues] = useState([]);\n  const [loadingName, setLoadingName] = useState(false);\n  const [loadingAisle, setLoadingAisle] = useState(false);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleSubmit = () => {\n    if (inputValue.trim() !== '') {\n      const newValue = {\n        inputValue,\n        itemName: '',\n        aisleNumber: '',\n        loading: true\n      };\n      setStoredValues(prevValues => [...prevValues, newValue]);\n      setInputValue('');\n\n      // Start the background process to fetch data\n      fetchData(newValue, storedValues.length);\n    }\n  };\n  const fetchData = async (value, index) => {\n    try {\n      const response = await axios.get('https://api.redcircleapi.com/request', {\n        params: {\n          api_key: '0CC42161E0A649A2AC3625E7CE64A56E',\n          search_term: inputValue,\n          type: 'search',\n          customer_zipcode: '02215',\n          delivery_type: 'in_store_pickup',\n          sort_by: 'best_match',\n          output: 'json'\n        }\n      });\n      const product_tcin = response.data.search_results[0].product.tcin;\n      const product_title = response.data.search_results[0].product.title;\n      setStoredValues(prevValues => {\n        const updatedValues = [...prevValues];\n        updatedValues[index] = {\n          ...updatedValues[index],\n          itemName: product_title,\n          loadingName: false\n        };\n        return updatedValues;\n      });\n      const aisleResponse = await axios.get('https://api.redcircleapi.com/request', {\n        params: {\n          api_key: '0CC42161E0A649A2AC3625E7CE64A56E',\n          type: 'product',\n          tcin: product_tcin,\n          customer_zipcode: '02215',\n          output: 'json'\n        }\n      });\n      const itemName = aisleResponse.data.product.title;\n      const aisleNumber = aisleResponse.data.product.aisle;\n\n      // Update the specific stored value with the fetched data and set loading to false\n      setStoredValues(prevValues => {\n        const updatedValues = [...prevValues];\n        updatedValues[index] = {\n          ...updatedValues[index],\n          aisleNumber,\n          loadingAisle: false\n        };\n        return updatedValues;\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // const handleSubmit = async () => {\n  //   if (inputValue.trim() !== '') {\n  //     setLoading(true);\n\n  //     // Make a call to get TCIN based on item name\n  //     const response = await axios.get('https://api.redcircleapi.com/request', {\n  //       params: {\n  //         api_key: '0CC42161E0A649A2AC3625E7CE64A56E',\n  //         search_term: inputValue,\n  //         type: 'search',\n  //         customer_zipcode: '02215',\n  //         delivery_type: 'in_store_pickup',\n  //         sort_by: 'best_match',\n  //         output: 'json'\n  //       }\n  //     });\n\n  //     const product_tcin = response.data.search_results[0].product.tcin;\n  //     const product_title = response.data.search_results[0].product.title;\n  //     console.log(product_title);\n\n  //     // Make a call to get aisle number\n  //     const aisleResponse = await axios.get('https://api.redcircleapi.com/request', {\n  //       params: {\n  //         api_key: '0CC42161E0A649A2AC3625E7CE64A56E',\n  //         type: 'product',\n  //         tcin: product_tcin,\n  //         customer_zipcode: '02215',\n  //         output: 'json'\n  //       }\n  //     });\n\n  //     const itemName = aisleResponse.data.product.title;\n  //     console.log('This is the item name: ', itemName);\n  //     const aisleNumber = aisleResponse.data.product.aisle;\n  //     console.log('This is the aisle number: ', aisleNumber);\n\n  //     setStoredValues(prevValues => [...prevValues, { itemName, aisleNumber }]);\n  //     setInputValue('');\n  //     setLoading(false);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Stored Values:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: storedValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: value.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading item name...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading aisle number...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Item: \", value.itemName, \", Aisle: \", value.aisleNumber]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AJfnmy/Au340MA3MB2sTkQx6rxk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputValue","setInputValue","storedValues","setStoredValues","loadingName","setLoadingName","loadingAisle","setLoadingAisle","handleInputChange","event","target","value","handleSubmit","trim","newValue","itemName","aisleNumber","loading","prevValues","fetchData","length","index","response","get","params","api_key","search_term","type","customer_zipcode","delivery_type","sort_by","output","product_tcin","data","search_results","product","tcin","product_title","title","updatedValues","aisleResponse","aisle","error","console","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/OneDrive - Virginia Tech/Desktop/Projects/HackHarvard/InstaShop/dynamic-inputs/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [storedValues, setStoredValues] = useState([]);\r\n  const [loadingName, setLoadingName] = useState(false);\r\n  const [loadingAisle, setLoadingAisle] = useState(false);\r\n  \r\n\r\n  const handleInputChange = event => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (inputValue.trim() !== '') {\r\n      const newValue = {\r\n        inputValue,\r\n        itemName: '',\r\n        aisleNumber: '',\r\n        loading: true\r\n      };\r\n  \r\n      setStoredValues(prevValues => [...prevValues, newValue]);\r\n      setInputValue('');\r\n  \r\n      // Start the background process to fetch data\r\n      fetchData(newValue, storedValues.length);\r\n    }\r\n  };\r\n  const fetchData = async (value, index) => {\r\n    try {\r\n      const response = await axios.get('https://api.redcircleapi.com/request', {\r\n        params: {\r\n          api_key: '0CC42161E0A649A2AC3625E7CE64A56E',\r\n          search_term: inputValue,\r\n          type: 'search',\r\n          customer_zipcode: '02215',\r\n          delivery_type: 'in_store_pickup',\r\n          sort_by: 'best_match',\r\n          output: 'json'\r\n        }\r\n      });\r\n  \r\n      const product_tcin = response.data.search_results[0].product.tcin;\r\n      const product_title = response.data.search_results[0].product.title;\r\n\r\n      setStoredValues(prevValues => {\r\n        const updatedValues = [...prevValues];\r\n        updatedValues[index] = {\r\n          ...updatedValues[index],\r\n          itemName: product_title,\r\n          loadingName: false\r\n        };\r\n        return updatedValues;\r\n      });\r\n\r\n      const aisleResponse = await axios.get('https://api.redcircleapi.com/request', {\r\n        params: {\r\n          api_key: '0CC42161E0A649A2AC3625E7CE64A56E',\r\n          type: 'product',\r\n          tcin: product_tcin,\r\n          customer_zipcode: '02215',\r\n          output: 'json'\r\n        }\r\n      });\r\n  \r\n      const itemName = aisleResponse.data.product.title;\r\n      const aisleNumber = aisleResponse.data.product.aisle;\r\n  \r\n      // Update the specific stored value with the fetched data and set loading to false\r\n      setStoredValues(prevValues => {\r\n        const updatedValues = [...prevValues];\r\n        updatedValues[index] = {\r\n          ...updatedValues[index],\r\n          aisleNumber,\r\n          loadingAisle: false\r\n        };\r\n        return updatedValues;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  // const handleSubmit = async () => {\r\n  //   if (inputValue.trim() !== '') {\r\n  //     setLoading(true);\r\n\r\n  //     // Make a call to get TCIN based on item name\r\n  //     const response = await axios.get('https://api.redcircleapi.com/request', {\r\n  //       params: {\r\n  //         api_key: '0CC42161E0A649A2AC3625E7CE64A56E',\r\n  //         search_term: inputValue,\r\n  //         type: 'search',\r\n  //         customer_zipcode: '02215',\r\n  //         delivery_type: 'in_store_pickup',\r\n  //         sort_by: 'best_match',\r\n  //         output: 'json'\r\n  //       }\r\n  //     });\r\n\r\n  //     const product_tcin = response.data.search_results[0].product.tcin;\r\n  //     const product_title = response.data.search_results[0].product.title;\r\n  //     console.log(product_title);\r\n\r\n  //     // Make a call to get aisle number\r\n  //     const aisleResponse = await axios.get('https://api.redcircleapi.com/request', {\r\n  //       params: {\r\n  //         api_key: '0CC42161E0A649A2AC3625E7CE64A56E',\r\n  //         type: 'product',\r\n  //         tcin: product_tcin,\r\n  //         customer_zipcode: '02215',\r\n  //         output: 'json'\r\n  //       }\r\n  //     });\r\n\r\n  //     const itemName = aisleResponse.data.product.title;\r\n  //     console.log('This is the item name: ', itemName);\r\n  //     const aisleNumber = aisleResponse.data.product.aisle;\r\n  //     console.log('This is the aisle number: ', aisleNumber);\r\n\r\n\r\n  //     setStoredValues(prevValues => [...prevValues, { itemName, aisleNumber }]);\r\n  //     setInputValue('');\r\n  //     setLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleSubmit} disabled={loading}>Submit</button>\r\n      </div>\r\n\r\n      <h3>Stored Values:</h3>\r\n      <ul>\r\n  {storedValues.map((value, index) => (\r\n    <li key={index}>\r\n      {value.loading ? (\r\n        <>\r\n          <span>Loading item name...</span>\r\n          <span>Loading aisle number...</span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          Item: {value.itemName}, Aisle: {value.aisleNumber}\r\n        </>\r\n      )}\r\n    </li>\r\n  ))}\r\n</ul>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}